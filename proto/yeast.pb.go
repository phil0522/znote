// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/yeast.proto

package phil0522_znote

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type YTag struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// archived is not shown in suggestion list.
	Archived bool `protobuf:"varint,2,opt,name=archived,proto3" json:"archived,omitempty"`
	// Other tags the tag should also be considered to be.
	ImplicitTags         []string `protobuf:"bytes,3,rep,name=implicit_tags,json=implicitTags,proto3" json:"implicit_tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *YTag) Reset()         { *m = YTag{} }
func (m *YTag) String() string { return proto.CompactTextString(m) }
func (*YTag) ProtoMessage()    {}
func (*YTag) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec51364f0e3b1bbc, []int{0}
}

func (m *YTag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YTag.Unmarshal(m, b)
}
func (m *YTag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YTag.Marshal(b, m, deterministic)
}
func (m *YTag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YTag.Merge(m, src)
}
func (m *YTag) XXX_Size() int {
	return xxx_messageInfo_YTag.Size(m)
}
func (m *YTag) XXX_DiscardUnknown() {
	xxx_messageInfo_YTag.DiscardUnknown(m)
}

var xxx_messageInfo_YTag proto.InternalMessageInfo

func (m *YTag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *YTag) GetArchived() bool {
	if m != nil {
		return m.Archived
	}
	return false
}

func (m *YTag) GetImplicitTags() []string {
	if m != nil {
		return m.ImplicitTags
	}
	return nil
}

type YNote struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string               `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Summary              string               `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	Content              string               `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Tags                 []string             `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	ImplicitTags         []string             `protobuf:"bytes,6,rep,name=implicit_tags,json=implicitTags,proto3" json:"implicit_tags,omitempty"`
	CreatedTime          *timestamp.Timestamp `protobuf:"bytes,7,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	UpdatedTime          *timestamp.Timestamp `protobuf:"bytes,8,opt,name=updated_time,json=updatedTime,proto3" json:"updated_time,omitempty"`
	Archived             bool                 `protobuf:"varint,9,opt,name=archived,proto3" json:"archived,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *YNote) Reset()         { *m = YNote{} }
func (m *YNote) String() string { return proto.CompactTextString(m) }
func (*YNote) ProtoMessage()    {}
func (*YNote) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec51364f0e3b1bbc, []int{1}
}

func (m *YNote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YNote.Unmarshal(m, b)
}
func (m *YNote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YNote.Marshal(b, m, deterministic)
}
func (m *YNote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YNote.Merge(m, src)
}
func (m *YNote) XXX_Size() int {
	return xxx_messageInfo_YNote.Size(m)
}
func (m *YNote) XXX_DiscardUnknown() {
	xxx_messageInfo_YNote.DiscardUnknown(m)
}

var xxx_messageInfo_YNote proto.InternalMessageInfo

func (m *YNote) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *YNote) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *YNote) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *YNote) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *YNote) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *YNote) GetImplicitTags() []string {
	if m != nil {
		return m.ImplicitTags
	}
	return nil
}

func (m *YNote) GetCreatedTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedTime
	}
	return nil
}

func (m *YNote) GetUpdatedTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedTime
	}
	return nil
}

func (m *YNote) GetArchived() bool {
	if m != nil {
		return m.Archived
	}
	return false
}

type YeastUpsertTagRequest struct {
	Ytag                 *YTag    `protobuf:"bytes,1,opt,name=ytag,proto3" json:"ytag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *YeastUpsertTagRequest) Reset()         { *m = YeastUpsertTagRequest{} }
func (m *YeastUpsertTagRequest) String() string { return proto.CompactTextString(m) }
func (*YeastUpsertTagRequest) ProtoMessage()    {}
func (*YeastUpsertTagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec51364f0e3b1bbc, []int{2}
}

func (m *YeastUpsertTagRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YeastUpsertTagRequest.Unmarshal(m, b)
}
func (m *YeastUpsertTagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YeastUpsertTagRequest.Marshal(b, m, deterministic)
}
func (m *YeastUpsertTagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YeastUpsertTagRequest.Merge(m, src)
}
func (m *YeastUpsertTagRequest) XXX_Size() int {
	return xxx_messageInfo_YeastUpsertTagRequest.Size(m)
}
func (m *YeastUpsertTagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_YeastUpsertTagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_YeastUpsertTagRequest proto.InternalMessageInfo

func (m *YeastUpsertTagRequest) GetYtag() *YTag {
	if m != nil {
		return m.Ytag
	}
	return nil
}

type YeastUpsertTagResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *YeastUpsertTagResponse) Reset()         { *m = YeastUpsertTagResponse{} }
func (m *YeastUpsertTagResponse) String() string { return proto.CompactTextString(m) }
func (*YeastUpsertTagResponse) ProtoMessage()    {}
func (*YeastUpsertTagResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec51364f0e3b1bbc, []int{3}
}

func (m *YeastUpsertTagResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YeastUpsertTagResponse.Unmarshal(m, b)
}
func (m *YeastUpsertTagResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YeastUpsertTagResponse.Marshal(b, m, deterministic)
}
func (m *YeastUpsertTagResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YeastUpsertTagResponse.Merge(m, src)
}
func (m *YeastUpsertTagResponse) XXX_Size() int {
	return xxx_messageInfo_YeastUpsertTagResponse.Size(m)
}
func (m *YeastUpsertTagResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_YeastUpsertTagResponse.DiscardUnknown(m)
}

var xxx_messageInfo_YeastUpsertTagResponse proto.InternalMessageInfo

func (m *YeastUpsertTagResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type YeastListTagsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *YeastListTagsRequest) Reset()         { *m = YeastListTagsRequest{} }
func (m *YeastListTagsRequest) String() string { return proto.CompactTextString(m) }
func (*YeastListTagsRequest) ProtoMessage()    {}
func (*YeastListTagsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec51364f0e3b1bbc, []int{4}
}

func (m *YeastListTagsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YeastListTagsRequest.Unmarshal(m, b)
}
func (m *YeastListTagsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YeastListTagsRequest.Marshal(b, m, deterministic)
}
func (m *YeastListTagsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YeastListTagsRequest.Merge(m, src)
}
func (m *YeastListTagsRequest) XXX_Size() int {
	return xxx_messageInfo_YeastListTagsRequest.Size(m)
}
func (m *YeastListTagsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_YeastListTagsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_YeastListTagsRequest proto.InternalMessageInfo

type YeastListTagsResponse struct {
	Ytag                 []*YTag  `protobuf:"bytes,1,rep,name=ytag,proto3" json:"ytag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *YeastListTagsResponse) Reset()         { *m = YeastListTagsResponse{} }
func (m *YeastListTagsResponse) String() string { return proto.CompactTextString(m) }
func (*YeastListTagsResponse) ProtoMessage()    {}
func (*YeastListTagsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec51364f0e3b1bbc, []int{5}
}

func (m *YeastListTagsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YeastListTagsResponse.Unmarshal(m, b)
}
func (m *YeastListTagsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YeastListTagsResponse.Marshal(b, m, deterministic)
}
func (m *YeastListTagsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YeastListTagsResponse.Merge(m, src)
}
func (m *YeastListTagsResponse) XXX_Size() int {
	return xxx_messageInfo_YeastListTagsResponse.Size(m)
}
func (m *YeastListTagsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_YeastListTagsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_YeastListTagsResponse proto.InternalMessageInfo

func (m *YeastListTagsResponse) GetYtag() []*YTag {
	if m != nil {
		return m.Ytag
	}
	return nil
}

type YeastUpsertNoteRequest struct {
	Ynote                *YNote   `protobuf:"bytes,1,opt,name=ynote,proto3" json:"ynote,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *YeastUpsertNoteRequest) Reset()         { *m = YeastUpsertNoteRequest{} }
func (m *YeastUpsertNoteRequest) String() string { return proto.CompactTextString(m) }
func (*YeastUpsertNoteRequest) ProtoMessage()    {}
func (*YeastUpsertNoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec51364f0e3b1bbc, []int{6}
}

func (m *YeastUpsertNoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YeastUpsertNoteRequest.Unmarshal(m, b)
}
func (m *YeastUpsertNoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YeastUpsertNoteRequest.Marshal(b, m, deterministic)
}
func (m *YeastUpsertNoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YeastUpsertNoteRequest.Merge(m, src)
}
func (m *YeastUpsertNoteRequest) XXX_Size() int {
	return xxx_messageInfo_YeastUpsertNoteRequest.Size(m)
}
func (m *YeastUpsertNoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_YeastUpsertNoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_YeastUpsertNoteRequest proto.InternalMessageInfo

func (m *YeastUpsertNoteRequest) GetYnote() *YNote {
	if m != nil {
		return m.Ynote
	}
	return nil
}

type YeastUpsertNoteResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *YeastUpsertNoteResponse) Reset()         { *m = YeastUpsertNoteResponse{} }
func (m *YeastUpsertNoteResponse) String() string { return proto.CompactTextString(m) }
func (*YeastUpsertNoteResponse) ProtoMessage()    {}
func (*YeastUpsertNoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec51364f0e3b1bbc, []int{7}
}

func (m *YeastUpsertNoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YeastUpsertNoteResponse.Unmarshal(m, b)
}
func (m *YeastUpsertNoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YeastUpsertNoteResponse.Marshal(b, m, deterministic)
}
func (m *YeastUpsertNoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YeastUpsertNoteResponse.Merge(m, src)
}
func (m *YeastUpsertNoteResponse) XXX_Size() int {
	return xxx_messageInfo_YeastUpsertNoteResponse.Size(m)
}
func (m *YeastUpsertNoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_YeastUpsertNoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_YeastUpsertNoteResponse proto.InternalMessageInfo

func (m *YeastUpsertNoteResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type YeastListNoteRequest struct {
	// How the response will be used, by default, only recently notes be retruned
	// No content is returned.
	Usage                string   `protobuf:"bytes,1,opt,name=usage,proto3" json:"usage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *YeastListNoteRequest) Reset()         { *m = YeastListNoteRequest{} }
func (m *YeastListNoteRequest) String() string { return proto.CompactTextString(m) }
func (*YeastListNoteRequest) ProtoMessage()    {}
func (*YeastListNoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec51364f0e3b1bbc, []int{8}
}

func (m *YeastListNoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YeastListNoteRequest.Unmarshal(m, b)
}
func (m *YeastListNoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YeastListNoteRequest.Marshal(b, m, deterministic)
}
func (m *YeastListNoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YeastListNoteRequest.Merge(m, src)
}
func (m *YeastListNoteRequest) XXX_Size() int {
	return xxx_messageInfo_YeastListNoteRequest.Size(m)
}
func (m *YeastListNoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_YeastListNoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_YeastListNoteRequest proto.InternalMessageInfo

func (m *YeastListNoteRequest) GetUsage() string {
	if m != nil {
		return m.Usage
	}
	return ""
}

type YeastListNoteResponse struct {
	Ynote                []*YNote `protobuf:"bytes,1,rep,name=ynote,proto3" json:"ynote,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *YeastListNoteResponse) Reset()         { *m = YeastListNoteResponse{} }
func (m *YeastListNoteResponse) String() string { return proto.CompactTextString(m) }
func (*YeastListNoteResponse) ProtoMessage()    {}
func (*YeastListNoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec51364f0e3b1bbc, []int{9}
}

func (m *YeastListNoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YeastListNoteResponse.Unmarshal(m, b)
}
func (m *YeastListNoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YeastListNoteResponse.Marshal(b, m, deterministic)
}
func (m *YeastListNoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YeastListNoteResponse.Merge(m, src)
}
func (m *YeastListNoteResponse) XXX_Size() int {
	return xxx_messageInfo_YeastListNoteResponse.Size(m)
}
func (m *YeastListNoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_YeastListNoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_YeastListNoteResponse proto.InternalMessageInfo

func (m *YeastListNoteResponse) GetYnote() []*YNote {
	if m != nil {
		return m.Ynote
	}
	return nil
}

func init() {
	proto.RegisterType((*YTag)(nil), "phil0522.znote.YTag")
	proto.RegisterType((*YNote)(nil), "phil0522.znote.YNote")
	proto.RegisterType((*YeastUpsertTagRequest)(nil), "phil0522.znote.YeastUpsertTagRequest")
	proto.RegisterType((*YeastUpsertTagResponse)(nil), "phil0522.znote.YeastUpsertTagResponse")
	proto.RegisterType((*YeastListTagsRequest)(nil), "phil0522.znote.YeastListTagsRequest")
	proto.RegisterType((*YeastListTagsResponse)(nil), "phil0522.znote.YeastListTagsResponse")
	proto.RegisterType((*YeastUpsertNoteRequest)(nil), "phil0522.znote.YeastUpsertNoteRequest")
	proto.RegisterType((*YeastUpsertNoteResponse)(nil), "phil0522.znote.YeastUpsertNoteResponse")
	proto.RegisterType((*YeastListNoteRequest)(nil), "phil0522.znote.YeastListNoteRequest")
	proto.RegisterType((*YeastListNoteResponse)(nil), "phil0522.znote.YeastListNoteResponse")
}

func init() {
	proto.RegisterFile("proto/yeast.proto", fileDescriptor_ec51364f0e3b1bbc)
}

var fileDescriptor_ec51364f0e3b1bbc = []byte{
	// 515 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x5d, 0x6f, 0xd3, 0x30,
	0x14, 0x6d, 0x9b, 0xa6, 0x6b, 0x6e, 0xcb, 0x24, 0xac, 0xae, 0x44, 0x79, 0xa1, 0x32, 0x0c, 0x22,
	0x81, 0xd2, 0x11, 0xc4, 0x23, 0x0f, 0x48, 0xf0, 0x86, 0x78, 0x08, 0x45, 0xa2, 0x80, 0x54, 0x79,
	0x89, 0xc9, 0x2c, 0x35, 0x1f, 0xc4, 0xce, 0xa4, 0xf2, 0xca, 0x5f, 0xe2, 0x07, 0x4e, 0x76, 0xe2,
	0x36, 0x5d, 0xa6, 0x65, 0x6f, 0xbe, 0xf6, 0xb9, 0xe7, 0x9e, 0x7b, 0x4e, 0x02, 0x8f, 0xf3, 0x22,
	0x13, 0xd9, 0x72, 0x47, 0x09, 0x17, 0x9e, 0x3a, 0xa3, 0xd3, 0xfc, 0x8a, 0x6d, 0x2f, 0xde, 0xf9,
	0xbe, 0xf7, 0x37, 0xcd, 0x04, 0x75, 0x9e, 0xc6, 0x59, 0x16, 0x6f, 0xe9, 0x52, 0xbd, 0x5e, 0x96,
	0xbf, 0x97, 0x82, 0x25, 0x94, 0x0b, 0x92, 0xe4, 0x55, 0x03, 0xfe, 0x09, 0xc3, 0xf5, 0x8a, 0xc4,
	0x08, 0xc1, 0x30, 0x25, 0x09, 0xb5, 0xfb, 0x8b, 0xbe, 0x6b, 0x05, 0xea, 0x8c, 0x1c, 0x18, 0x93,
	0x22, 0xbc, 0x62, 0xd7, 0x34, 0xb2, 0x07, 0x8b, 0xbe, 0x3b, 0x0e, 0xf6, 0x35, 0x7a, 0x06, 0x8f,
	0x58, 0x92, 0x6f, 0x59, 0xc8, 0xc4, 0x46, 0x90, 0x98, 0xdb, 0xc6, 0xc2, 0x70, 0xad, 0x60, 0xaa,
	0x2f, 0x57, 0x24, 0xe6, 0xf8, 0xff, 0x00, 0xcc, 0xf5, 0x97, 0x4c, 0x50, 0x74, 0x0a, 0x03, 0x16,
	0xd5, 0xe4, 0x03, 0x16, 0xa1, 0x19, 0x98, 0x82, 0x89, 0x2d, 0x55, 0xbc, 0x56, 0x50, 0x15, 0xc8,
	0x86, 0x13, 0x5e, 0x26, 0x09, 0x29, 0x76, 0xb6, 0xa1, 0xee, 0x75, 0x29, 0x5f, 0xc2, 0x2c, 0x15,
	0x34, 0x15, 0xf6, 0xb0, 0x7a, 0xa9, 0x4b, 0x29, 0x5c, 0xcd, 0x37, 0xd5, 0x7c, 0x75, 0x6e, 0x8b,
	0x1b, 0xb5, 0xc5, 0xa1, 0xf7, 0x30, 0x0d, 0x0b, 0x4a, 0x04, 0x8d, 0x36, 0xd2, 0x14, 0xfb, 0x64,
	0xd1, 0x77, 0x27, 0xbe, 0xe3, 0x55, 0x8e, 0x79, 0xda, 0x31, 0x6f, 0xa5, 0x1d, 0x0b, 0x26, 0x35,
	0x5e, 0xde, 0xc8, 0xf6, 0x32, 0x8f, 0x0e, 0xed, 0xe3, 0xee, 0xf6, 0x1a, 0xaf, 0xda, 0x9b, 0xde,
	0x5a, 0xc7, 0xde, 0xe2, 0x0f, 0x70, 0xb6, 0x96, 0x99, 0x7e, 0xcb, 0x39, 0x2d, 0xa4, 0xd8, 0x80,
	0xfe, 0x29, 0x29, 0x17, 0xc8, 0x85, 0xe1, 0x4e, 0x90, 0x58, 0xf9, 0x38, 0xf1, 0x67, 0xde, 0x71,
	0xd8, 0x9e, 0x0c, 0x32, 0x50, 0x08, 0x7c, 0x01, 0xf3, 0xdb, 0x14, 0x3c, 0xcf, 0x52, 0x4e, 0xd1,
	0x1c, 0x46, 0x5c, 0x10, 0x51, 0xf2, 0x3a, 0x8d, 0xba, 0xc2, 0x73, 0x98, 0xa9, 0x8e, 0xcf, 0x8c,
	0x2b, 0x7f, 0xea, 0x99, 0x7b, 0x31, 0x87, 0xfb, 0x9a, 0xe8, 0x20, 0xc6, 0xe8, 0x10, 0xf3, 0xe9,
	0x48, 0x8c, 0xfc, 0x1e, 0xf4, 0x42, 0xaf, 0xc0, 0xdc, 0x49, 0x74, 0xbd, 0xd1, 0x59, 0x8b, 0x44,
	0x81, 0x2b, 0x0c, 0x7e, 0x03, 0x4f, 0x5a, 0x34, 0x1d, 0x4b, 0xbd, 0x6e, 0x2c, 0xd5, 0x9c, 0x3b,
	0x03, 0xb3, 0xe4, 0x24, 0xd6, 0x9f, 0x7b, 0x55, 0xe0, 0x8f, 0x8d, 0x55, 0x8f, 0xe8, 0x1b, 0x32,
	0x8d, 0x2e, 0x99, 0xfe, 0x3f, 0x03, 0xa6, 0x8a, 0xe6, 0x2b, 0x2d, 0xae, 0x59, 0x48, 0xd1, 0x2f,
	0xb0, 0x4a, 0x1d, 0x03, 0x3a, 0x6f, 0xf5, 0xde, 0x95, 0xb4, 0xf3, 0xa2, 0x0b, 0x56, 0x29, 0xc3,
	0x3d, 0xf4, 0x1d, 0xc6, 0x3a, 0x1a, 0xf4, 0xfc, 0xce, 0xae, 0x5b, 0x89, 0x3a, 0x0f, 0x42, 0xe1,
	0x1e, 0xda, 0x00, 0x94, 0x7b, 0xab, 0xd1, 0x03, 0x15, 0x39, 0x2f, 0xef, 0xc1, 0x35, 0x4d, 0xc5,
	0x3d, 0xf4, 0x03, 0x2c, 0x6d, 0xf5, 0x7d, 0xda, 0x1b, 0xc1, 0x39, 0xe7, 0x1d, 0x28, 0xcd, 0x7d,
	0x39, 0x52, 0x3f, 0xe0, 0xdb, 0x9b, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfa, 0xec, 0xd6, 0x18, 0x24,
	0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// YeastServiceClient is the client API for YeastService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type YeastServiceClient interface {
	UpsertTag(ctx context.Context, in *YeastUpsertTagRequest, opts ...grpc.CallOption) (*YeastUpsertTagResponse, error)
	ListTags(ctx context.Context, in *YeastListTagsRequest, opts ...grpc.CallOption) (*YeastListTagsRequest, error)
	UpsertNote(ctx context.Context, in *YeastUpsertTagResponse, opts ...grpc.CallOption) (*YeastUpsertNoteResponse, error)
	ListNotes(ctx context.Context, in *YeastListNoteRequest, opts ...grpc.CallOption) (*YeastListNoteResponse, error)
}

type yeastServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewYeastServiceClient(cc grpc.ClientConnInterface) YeastServiceClient {
	return &yeastServiceClient{cc}
}

func (c *yeastServiceClient) UpsertTag(ctx context.Context, in *YeastUpsertTagRequest, opts ...grpc.CallOption) (*YeastUpsertTagResponse, error) {
	out := new(YeastUpsertTagResponse)
	err := c.cc.Invoke(ctx, "/phil0522.znote.YeastService/upsertTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yeastServiceClient) ListTags(ctx context.Context, in *YeastListTagsRequest, opts ...grpc.CallOption) (*YeastListTagsRequest, error) {
	out := new(YeastListTagsRequest)
	err := c.cc.Invoke(ctx, "/phil0522.znote.YeastService/ListTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yeastServiceClient) UpsertNote(ctx context.Context, in *YeastUpsertTagResponse, opts ...grpc.CallOption) (*YeastUpsertNoteResponse, error) {
	out := new(YeastUpsertNoteResponse)
	err := c.cc.Invoke(ctx, "/phil0522.znote.YeastService/upsertNote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yeastServiceClient) ListNotes(ctx context.Context, in *YeastListNoteRequest, opts ...grpc.CallOption) (*YeastListNoteResponse, error) {
	out := new(YeastListNoteResponse)
	err := c.cc.Invoke(ctx, "/phil0522.znote.YeastService/ListNotes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// YeastServiceServer is the server API for YeastService service.
type YeastServiceServer interface {
	UpsertTag(context.Context, *YeastUpsertTagRequest) (*YeastUpsertTagResponse, error)
	ListTags(context.Context, *YeastListTagsRequest) (*YeastListTagsRequest, error)
	UpsertNote(context.Context, *YeastUpsertTagResponse) (*YeastUpsertNoteResponse, error)
	ListNotes(context.Context, *YeastListNoteRequest) (*YeastListNoteResponse, error)
}

// UnimplementedYeastServiceServer can be embedded to have forward compatible implementations.
type UnimplementedYeastServiceServer struct {
}

func (*UnimplementedYeastServiceServer) UpsertTag(ctx context.Context, req *YeastUpsertTagRequest) (*YeastUpsertTagResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpsertTag not implemented")
}
func (*UnimplementedYeastServiceServer) ListTags(ctx context.Context, req *YeastListTagsRequest) (*YeastListTagsRequest, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTags not implemented")
}
func (*UnimplementedYeastServiceServer) UpsertNote(ctx context.Context, req *YeastUpsertTagResponse) (*YeastUpsertNoteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpsertNote not implemented")
}
func (*UnimplementedYeastServiceServer) ListNotes(ctx context.Context, req *YeastListNoteRequest) (*YeastListNoteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNotes not implemented")
}

func RegisterYeastServiceServer(s *grpc.Server, srv YeastServiceServer) {
	s.RegisterService(&_YeastService_serviceDesc, srv)
}

func _YeastService_UpsertTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(YeastUpsertTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YeastServiceServer).UpsertTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/phil0522.znote.YeastService/UpsertTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YeastServiceServer).UpsertTag(ctx, req.(*YeastUpsertTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _YeastService_ListTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(YeastListTagsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YeastServiceServer).ListTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/phil0522.znote.YeastService/ListTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YeastServiceServer).ListTags(ctx, req.(*YeastListTagsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _YeastService_UpsertNote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(YeastUpsertTagResponse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YeastServiceServer).UpsertNote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/phil0522.znote.YeastService/UpsertNote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YeastServiceServer).UpsertNote(ctx, req.(*YeastUpsertTagResponse))
	}
	return interceptor(ctx, in, info, handler)
}

func _YeastService_ListNotes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(YeastListNoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YeastServiceServer).ListNotes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/phil0522.znote.YeastService/ListNotes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YeastServiceServer).ListNotes(ctx, req.(*YeastListNoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _YeastService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "phil0522.znote.YeastService",
	HandlerType: (*YeastServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "upsertTag",
			Handler:    _YeastService_UpsertTag_Handler,
		},
		{
			MethodName: "ListTags",
			Handler:    _YeastService_ListTags_Handler,
		},
		{
			MethodName: "upsertNote",
			Handler:    _YeastService_UpsertNote_Handler,
		},
		{
			MethodName: "ListNotes",
			Handler:    _YeastService_ListNotes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/yeast.proto",
}
