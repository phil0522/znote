{"version":3,"sources":["services/FileService.ts","components/CodeBlock.tsx","components/TaskConstants.ts","components/Heading.tsx","components/TocAstPlugin.ts","components/TextBlock.tsx","components/ListItem.tsx","components/ContentPage.tsx","components/SideBar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["fileService","categoryMap","Map","category","this","has","get","url","fetch","response","text","lines","split","notes","forEach","line","fields","length","path","slice","title","trim","segments","baseName","level","endsWith","hasPage","replace","push","set","startsWith","res","books","map","x","filter","contentCopyIcon","xmlns","width","height","viewBox","d","CodeBlock","props","useState","showNotification","setShowNotification","className","onClick","navigator","clipboard","writeText","value","then","setTimeout","language","isActiveTask","task","isDoneTask","Heading","content","children","id","getIdFromProp","headingClass","toLowerCase","postOrderVisit","root","fn","c","restoreEmptyLink","n","type","fixDefinitionLink","TocPlugin","node","renderProps","headings","unwrapChildrenLink","data","ordered","depth","anchorId","item","lastHeading","pop","collectHeading","splice","custom_map","replaceEmoji","elements","matches","matchAll","pos","m","start","index","s","end","key","substring","taskClass","name","r","emoji","getUnicode","e","TextBlock","emojiSupport","textElement","React","cloneElement","Array","isArray","substr","href","shortLinkSupport","ListItem","checkbox","classNames","str","checked","undefined","createElement","readOnly","getCoreProps","notifyCallback","ContentPage","location","useLocation","setContent","fullpath","window","pathname","isValid","content$","contentPath","getNoteContent","useLayoutEffect","Prism","highlightAll","v","useEffect","sub","from","subscribe","hash","ele","document","getElementById","parentElement","scrollTop","scrollIntoView","scrollTo","unsubscribe","source","escapeHtml","astPlugins","renderers","code","heading","listItem","SideBar","setNotes","useParams","notesPromise","getNotes","note","history","pushState","NavBar","categories","setCategories","getBooks","cs","to","toUpperCase","ContentWithSideBar","App","Boolean","hostname","match","ReactDOM","render","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a8f2726d.chunk.js","sourcesContent":["\nexport interface Note {\n  path: string\n  title: string\n  level: number\n  hasPage: boolean\n}\nexport interface FileService {\n  getNotes(category: string): Note[]\n  getContent(path: string): string\n  getBooks(): string[]\n}\n\nclass FileServiceImpl {\n  private categoryMap: Map<string, Note[]> = new Map();\n  async getNotes(category: string): Promise<Note[]> {\n    if (this.categoryMap.has(category)) {\n      return this.categoryMap.get(category)!;\n    }\n    const url = \"/md/\" + category + \"/\" + category + \".toc\";\n    let response = await fetch(url);\n    let text = await response.text();\n    let lines = text.split(\"\\n\");\n    let notes: Note[] = [];\n\n    lines.forEach(line => {\n      const fields = line.split(\",\", 2);\n      if (fields.length !== 2) {\n        return;\n      }\n      let path = fields[0];\n      if (path[0] === '/') {\n        path = path.slice(1);\n      }\n      let title = fields[1].trim();\n\n      const segments = path.split(\"/\");\n      let baseName = segments[segments.length - 1];\n      let level = segments.length - 1;\n      if (baseName.endsWith(\"README.md\")) {\n        level -= 1;\n      }\n\n      if (level < 0) {\n        // The root index, do not show in the side nav.\n        return;\n      }\n\n      baseName = segments[level];\n      let hasPage = true;\n      if (title.length === 0) {\n        hasPage = false;\n        title = baseName.replace(\".md\", \"\");\n      }\n      notes.push({\n        path: \"/note/\" + category + \"/\" + path,\n        level: level,\n        title: title,\n        hasPage: hasPage,\n      })\n    });\n\n    this.categoryMap.set(category, notes);\n    return notes;\n  }\n\n  async getNoteContent(path: string): Promise<string> {\n    if (path.startsWith(\"/\")) {\n      path = path.slice(1);\n    }\n    const url = \"/md/\" + path;\n    let res = await fetch(url);\n    return await res.text();\n  }\n\n  async getBooks(): Promise<string[]> {\n    const url = \"/md/root.toc\";\n    let res = await fetch(url);\n    let text = await res.text();\n\n    let books = text.split(\"\\n\")\n    return books.map(x => x.trim()).filter(x => x.length > 0)\n  }\n}\n\nexport const fileService: FileServiceImpl = new FileServiceImpl();\n","import React, { useState } from 'react';\nimport \"./CodeBlock.scss\";\n\ninterface Props {\n  language: string\n  value: string\n}\n\nconst contentCopyIcon = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\" /></svg>\n)\n\nexport const CodeBlock = (props: Props) => {\n  const [showNotification, setShowNotification] = useState(false);\n  function onClick() {\n    if (navigator.clipboard) {\n      navigator.clipboard.writeText(props.value).then(() => {\n        displayTooltip();\n      })\n    }\n  }\n\n  function displayTooltip() {\n    setShowNotification(true);\n\n    setTimeout(() => {\n      setShowNotification(false);\n    }, 3000);\n  }\n\n  return (\n    <div className=\"code-block\">\n      <div className={\" tooltip\" + (showNotification ? \"\" : \" tooltip-hidden\")} >Copied</div>\n      <button className=\"codeblock-copy-btn\"\n        onClick={onClick}\n      >{contentCopyIcon}</button>\n      <pre className={\" langauge-\" + props.language}>\n        <code className={\" language-\" + props.language} >{props.value}</code>\n      </pre>\n    </div>\n  )\n}\n","export function isActiveTask(task: string): boolean {\n  return task.startsWith(\":active:\");\n}\n\nexport function isDoneTask(task: string): boolean {\n  return task.startsWith(\":done:\");\n}\n","import React from 'react';\nimport \"./CodeBlock.scss\";\nimport { isActiveTask, isDoneTask } from \"./TaskConstants\"\n\ninterface Props {\n  level: number\n  children: any[]\n}\n\n\nexport const Heading = (props: Props) => {\n\n  let content = \"\";\n  if (props.children && props.children.length > 0\n    && props.children[0]!.props.value) {\n    content = props.children[0]!.props.value;\n  }\n  const id = getIdFromProp(content);\n  let headingClass = \"\";\n  if (isActiveTask(content)) {\n    headingClass += \" active\";\n  }\n  if (isDoneTask(content)) {\n    headingClass += \" done\";\n  }\n\n  switch (props.level) {\n    case 1:\n      return <h1 id={id} className={headingClass}>{props.children}</h1>\n    case 2:\n      return <h2 id={id} className={headingClass}>{props.children}</h2>\n    case 3:\n      return <h3 id={id} className={headingClass}>{props.children}</h3>\n    case 4:\n      return <h4 id={id} className={headingClass}>{props.children}</h4>\n    case 5:\n      return <h5 id={id} className={headingClass}>{props.children}</h5>\n  }\n  return null;\n}\n\nexport function getIdFromProp(value: string): string {\n  if (!value) {\n    return \"\";\n  }\n  return value.toLowerCase().replace(/[ /:{}]+/g, \"-\")\n}\n","import { MarkdownAbstractSyntaxTree, RenderProps } from 'react-markdown'\nimport { getIdFromProp } from './Heading';\n\ninterface Heading {\n  depth: number\n  title: string\n}\n\nfunction postOrderVisit(root: MarkdownAbstractSyntaxTree, fn: (n: MarkdownAbstractSyntaxTree) => void) {\n  if (root.children && root.children.length && root.children.length > 0) {\n    root.children!.forEach((c) => postOrderVisit(c, fn))\n  }\n  fn(root);\n}\nfunction restoreEmptyLink(n: MarkdownAbstractSyntaxTree) {\n  if (n.type !== 'linkReference') {\n    return;\n  }\n  if (n.children && n.children.length === 1 && n.children[0].value) {\n    n.children[0].value = \"[\" + n.children[0].value + \"]\"\n  }\n\n  return;\n}\n\nfunction fixDefinitionLink(n: MarkdownAbstractSyntaxTree) {\n  if (n.type !== 'definition') {\n    return;\n  }\n  if (n.url && n.url === '#') {\n    // eslint-disable-next-line\n    n.url = \"javascript:void(0);\";\n  }\n}\n\nexport function TocPlugin(node: MarkdownAbstractSyntaxTree, renderProps?: RenderProps): MarkdownAbstractSyntaxTree {\n  const headings: MarkdownAbstractSyntaxTree[] = [];\n  headings.push({\n    data: { \"class\": \"ABC\" },\n    type: \"nav\",\n    ordered: false,\n    depth: 0,\n    children: [],\n  });\n\n\n\n  function unwrapChildrenLink(n: MarkdownAbstractSyntaxTree): MarkdownAbstractSyntaxTree[] {\n    let content = \"__nolink__:\";\n    if (n.children && n.children.length > 0) {\n      n.children.forEach(c => {\n        if (c.value) {\n          content += c.value\n        } else if (c.children && c.children.length > 0 && c.children[0].value) {\n          content += c.children[0].value;\n        }\n      })\n    }\n    return [{\n      type: \"text\",\n      value: content\n    }];\n  }\n\n  function collectHeading(n: MarkdownAbstractSyntaxTree) {\n    if (n.type !== \"heading\" || !n.depth || n.depth <= 1) {\n      return;\n    }\n\n    if (n.children && n.children.length === 0) {\n      return;\n    }\n    let anchorId = getIdFromProp(n.children![0]!.value!);\n    const item: MarkdownAbstractSyntaxTree =\n    {\n      type: \"listItem\",\n      depth: n.depth,\n      children: [{\n        type: \"link\",\n        url: \"#\" + anchorId,\n        children: unwrapChildrenLink(n),\n      }],\n    }\n\n    let lastHeading = headings[headings.length - 1];\n    if (lastHeading.depth! < item.depth!) {\n      // A new level.\n      lastHeading.children!.push({\n        type: \"list\",\n        ordered: false,\n        children: [],\n      })\n      lastHeading.children![lastHeading.children!.length - 1].children!.push(item);\n\n    } else if (lastHeading.depth! >= item.depth!) {\n      while (lastHeading.depth! >= item.depth!) {\n        headings.pop();\n        lastHeading = headings[headings.length - 1];\n      }\n      lastHeading.children![lastHeading.children!.length - 1].children!.push(item);\n    }\n\n    headings.push(item);\n  }\n\n  if (node.children!.length === 0) {\n    return node;\n  }\n\n  postOrderVisit(node, fixDefinitionLink);\n  postOrderVisit(node, restoreEmptyLink);\n\n  node.children!.forEach((c) => collectHeading(c))\n  if (headings[0].children!.length > 0) {\n    node.children!.splice(1, 0, headings[0]!.children![0])\n  }\n\n  return node;\n}\n","import React, { Fragment, ReactElement } from 'react';\n// @ts-ignore\nimport * as emoji from 'emoji-dictionary';\nimport \"./CodeBlock.scss\";\nimport { isActiveTask, isDoneTask } from './TaskConstants';\n\ninterface Props {\n  value: string\n  data: Record<string, string>\n}\n\nconst custom_map: Record<string, string> = {\n  ':done:': ':heavy_check_mark:',\n  ':active:': ':scroll:',\n  ':compiled:': ':green_book:',\n}\n\nfunction getUnicode(name: string): string {\n  if (name in custom_map) {\n    name = custom_map[name];\n  }\n  let r = emoji.getUnicode(name);\n  if (!r) {\n    return emoji.getUnicode(\":warning:\");\n  }\n  return r;\n}\n\nfunction replaceEmoji(text: string): ReactElement {\n  if (!text || text.length === 0) {\n    return <Fragment>{text}</Fragment>\n  }\n  let elements: ReactElement[] = [];\n  let matches = [...text.matchAll(/:\\w+:/ig)];\n  if (matches.length === 0) {\n    return <Fragment>{text}</Fragment>;\n  }\n  let pos = 0;\n  matches.forEach(m => {\n    let start = m.index!;\n    let s = m[0];\n    let end = start + s.length;\n    if (start > pos) {\n      elements.push(<Fragment key={elements.length}>{text.substring(pos, start)}</Fragment>)\n    }\n    let taskClass = \"\";\n    if (isActiveTask(s)) {\n      taskClass += \" active\";\n    }\n    if (isDoneTask(s)) {\n      taskClass += \" done\";\n    }\n    elements.push(<span key={elements.length} className={\"emoji\" + taskClass}>{getUnicode(s)}</span>)\n    pos = end + 1;\n  });\n  if (pos < text.length) {\n    elements.push(<Fragment key={elements.length + 1}>{text.substring(pos)}</Fragment>)\n  }\n  return <Fragment>{elements.map((e) => e)}</Fragment>;\n\n}\n\nfunction emojiSupport(textElement: ReactElement): ReactElement {\n  if (typeof textElement.props.children === \"string\") {\n    let text: string = textElement.props.children;\n    return React.cloneElement(textElement, {}, replaceEmoji(text))\n  }\n  if (Array.isArray(textElement.props.children)) {\n    let children: ReactElement[] = textElement.props.children!;\n    return React.cloneElement(textElement, {},\n      children.map(c => emojiSupport(c)));\n  }\n\n  return textElement;\n\n  // return\n}\n\nfunction shortLinkSupport(text: string): ReactElement {\n  let elements: ReactElement[] = [];\n  if (!text || text.length === 0) {\n    return <Fragment>{text}</Fragment>\n  }\n  let matches = [...text.matchAll(/(?<!\\/)(b|go|t|cl|google3)\\/[-a-zA-Z0-9]+/g)];\n\n  if (matches.length === 0) {\n    return <Fragment>{text}</Fragment>;\n  }\n\n  let pos = 0;\n  matches.forEach(m => {\n    let start = m.index!;\n    let s = m[0];\n    let end = start + s.length;\n    if (start > pos) {\n      elements.push(<Fragment key={elements.length}>{text.substring(pos, start)}</Fragment>)\n    }\n    elements.push(<a key={elements.length} href={\"http://\" + s}>{s}</a>)\n    pos = end;\n  });\n  if (pos < text.length) {\n    elements.push(<Fragment key={elements.length + 1}>{text.substring(pos)}</Fragment>)\n  }\n  return <Fragment>{elements.map((e) => e)}</Fragment>;\n}\n\nexport const TextBlock = (props: Props) => {\n  let ele = null;\n  if (props.value.startsWith(\"__nolink__:\")) {\n    ele = <Fragment>{props.value.substr(\"__nolink__:\".length)}</Fragment>\n  } else {\n    ele = shortLinkSupport(props.value);\n  }\n  return emojiSupport(ele);\n}\n","import React, { createElement } from 'react';\nimport \"./CodeBlock.scss\";\nimport { isActiveTask, isDoneTask } from './TaskConstants';\n\ninterface Props {\n  checked: boolean,\n  children: any[],\n}\n\nfunction getCoreProps(props: any): Record<string, any> {\n  return props['data-sourcepos'] ? { 'data-sourcepos': props['data-sourcepos'] } : {}\n}\n\nexport const ListItem = (props: Props) => {\n  let checkbox = null\n\n  let classNames: Record<string, string> = {};\n  if (props.children[0] && props.children[0].props.value) {\n    const str: string = props.children[0].props.value;\n    if (isActiveTask(str) || isDoneTask(str)) {\n      classNames[\"className\"] = \"task\";\n    }\n  } else if (props.checked !== null && props.checked !== undefined) {\n    const checked = props.checked\n    checkbox = createElement('input', { type: 'checkbox', checked, readOnly: true })\n  }\n\n\n  return <li {...classNames} {...getCoreProps(props)}>{checkbox} {props.children}</li>\n}\n","import React, { useLayoutEffect, useState, useEffect } from 'react';\nimport \"./ContentPage.scss\";\nimport { fileService } from '../services/FileService';\nimport ReactMarkdown from 'react-markdown'\nimport Prism from \"prismjs\";\nimport { from } from 'rxjs';\nimport { useLocation } from 'react-router-dom';\nimport { CodeBlock } from './CodeBlock';\nimport { TocPlugin } from './TocAstPlugin';\nimport { Heading } from './Heading';\nimport { TextBlock } from './TextBlock';\nimport { ListItem } from './ListItem';\n\ntype VoidCallback = () => void;\nlet notifyCallback: VoidCallback = () => { };\nexport function NotifyRefresh() {\n  notifyCallback();\n}\n\nexport const ContentPage = () => {\n  const location = useLocation();\n  const [content, setContent] = useState(\"loading\");\n  let fullpath = window.location.pathname;\n\n  let isValid = false;\n  let content$: Promise<string> | null = null;\n  let contentPath = \"\";\n\n  if (fullpath.startsWith('/note/')) {\n    isValid = true;\n    contentPath = fullpath.substring(5);\n  }\n  if (isValid) {\n    content$ = fileService.getNoteContent(contentPath);\n  }\n  useLayoutEffect(() => {\n    Prism.highlightAll();\n  })\n\n  notifyCallback = () => {\n    let fullpath = window.location.pathname;\n    if (fullpath.startsWith('/note/')) {\n      contentPath = fullpath.substring(5);\n    }\n    fileService.getNoteContent(contentPath).then((v) => {\n      setContent(v)\n    });\n  }\n\n  useEffect(() => {\n    if (!isValid) {\n      return;\n    }\n    const sub = from(content$!).subscribe((value) => {\n      setContent(value);\n      if (!location.hash) {\n        window.scrollTo(0, 0);\n      } else {\n        const hash = location.hash.replace(\"#\", \"\");\n        const ele = document.getElementById(hash);\n        if (ele && ele.parentElement && ele.parentElement.scrollTop >= 0) {\n          ele.scrollIntoView();\n        }\n      }\n    });\n    return () => sub.unsubscribe();\n  }, [content$, isValid, location.hash])\n\n  return (\n    <ReactMarkdown className=\"content-page\" source={content}\n      escapeHtml={false}\n      astPlugins={[TocPlugin]}\n      renderers={{ code: CodeBlock, heading: Heading, text: TextBlock, listItem: ListItem }} />\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport \"./SideBar.scss\";\nimport { fileService, Note } from '../services/FileService';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { NotifyRefresh } from './ContentPage';\n\n\n\n\nexport const SideBar = () => {\n  const [notes, setNotes] = useState([] as Note[]);\n  const { category } = useParams();\n\n  const notesPromise = fileService.getNotes(category!);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    notesPromise.then((s) => setNotes(s));\n  }, [setNotes, notesPromise])\n\n  return (\n    <div className=\"side-bar\">\n      {\n        notes.map((note) => {\n          return (\n            <div key={note.path} onClick={() => {\n              if (note.hasPage) {\n                window.history.pushState({}, \"\", note.path);\n                NotifyRefresh();\n              }\n            }} className={\"item indent-\" + note.level}>\n              {note.hasPage\n                ? (<span className={note.path === location.pathname ? \"active\" : undefined}>{note.title}</span>) :\n                <span>{note.title}</span>}\n            </div>)\n        })\n      }\n    </div >\n  )\n}\n","import React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.scss';\nimport { SideBar } from './components/SideBar';\nimport { ContentPage } from './components/ContentPage';\nimport { fileService } from './services/FileService';\n\nconst NavBar = () => {\n  let [categories, setCategories] = useState([\"loading\"])\n\n  if (categories[0] === \"loading\") {\n    fileService.getBooks().then(\n      cs => {\n        if (cs[0] !== categories[0]) {\n          setCategories(cs);\n        }\n      });\n  }\n\n  return (\n    <nav className=\"nav-bar\">\n      <ul>\n        {\n          categories.map(c =>\n            (<li key={c}>\n              <Link to={`/note/${c}/README.md`}>{c[0].toUpperCase() + c.slice(1)}</Link>\n            </li>)\n          )}\n      </ul>\n    </nav >)\n}\n\nconst ContentWithSideBar = () => {\n  return (\n    <div className=\"with-sidebar\">\n      <SideBar></SideBar>\n      <ContentPage />\n    </div>\n  )\n}\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <NavBar />\n      <Switch>\n        <Route path=\"/note/:category\"><ContentWithSideBar /></Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'prismjs/themes/prism-tomorrow.css';\n\nimport 'prismjs/prism';\nimport 'prismjs/components/prism-python';\nimport 'prismjs/components/prism-kotlin';\nimport 'prismjs/components/prism-java';\nimport 'prismjs/components/prism-go';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}